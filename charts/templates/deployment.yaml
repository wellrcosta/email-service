apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace | default "default" }}
  labels:
    app: {{ .Values.name }}
    environment: {{ .Values.environment }}
    appVersion: {{ .Values.appVersion }}
spec:
  replicas: {{ .Values.deployment.replicas | default "1" }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
      name: {{ .Values.name }}
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
      labels:
        app: {{ .Values.name }}
        name: {{ .Values.name }}
        system: {{ .Values.system }}
        environment: {{ .Values.environment }}
        appVersion: {{ .Values.appVersion }}
    spec:
      serviceAccountName: {{ .Values.name }}
      automountServiceAccountToken: false
      securityContext:
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 2000
      containers:
        - name: {{ .Values.name }}
          {{- if .Values.deployment.tag }}
          {{- $tag := (.Values.deployment.tag) }}
          image: {{ printf "%s:%s" .Values.deployment.image $tag }}
          {{- else}}
          image: {{ .Values.deployment.image }}
          {{end}}
          securityContext:
            allowPrivilegeEscalation: false
          startupProbe:
            httpGet:
              path: {{ .Values.deployment.healthCheckPath | default "/actuator/health" }}
              port: {{ .Values.deployment.containerPort | default "3000" }}
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 5
            timeoutSeconds: 3
          readinessProbe:
            httpGet:
              path: {{ .Values.deployment.healthCheckPath | default "/actuator/health" }}
              port: {{ .Values.deployment.containerPort | default "3000" }}
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
            timeoutSeconds: 10
          livenessProbe:
            httpGet:
              path: {{ .Values.deployment.healthCheckPath | default "/actuator/health" }}
              port: {{ .Values.deployment.containerPort | default "3000" }}
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
            timeoutSeconds: 10
          ports:
            - name: container-port
              containerPort: {{ .Values.deployment.containerPort | default "3000" }}
          imagePullPolicy: Always

          resources:
            requests:
              memory: {{ .Values.deployment.resources.requests.memory | default "128Mi" }}
              cpu: {{ .Values.deployment.resources.requests.cpu | default "100m" }}
            limits:
              memory: {{ .Values.deployment.resources.limits.memory | default "256Mi" }}
              cpu: {{ .Values.deployment.resources.limits.cpu | default "200m" }}

          envFrom:
          {{- range $configMap := .Values.configMaps  }}
            - configMapRef:
                name: {{ $configMap }}
          {{- end }}
          {{- range $secret := .Values.secrets  }}
            - secretRef:
                name: {{ $secret }}
          {{- end }}
          env:
            - name: ENVIRONMENT
              value: {{ .Values.environment }}
          {{- range $key, $value := .Values.envs  }}
            - name: {{ $key }}
              value: {{ $value | quote }}
          {{- end }}
