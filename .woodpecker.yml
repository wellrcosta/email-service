steps:
  clone:
    image: woodpeckerci/plugin-git
    settings:
      depth: 0
      partial: false
    when:
      event:
        - push
        - pull_request

  install-and-test:
    name: Install & Test
    image: node:20
    commands:
      - npm ci
      - npm run test -- --coverage
    when:
      branch:
        - main
      event:
        - push

  upload-coverage-codecov:
    name: Upload Coverage to Codecov
    image: alpine:latest
    environment:
      CODECOV_TOKEN:
        from_secret: CODECOV_TOKEN
    commands:
      - apk add --no-cache curl bash
      - curl -Os https://uploader.codecov.io/latest/linux/codecov
      - chmod +x codecov
      - ./codecov --token $CODECOV_TOKEN --fail-under=60 --file=coverage/lcov.info
    when:
      branch:
        - main
      event:
        - push

  docker-build-push:
    name: Docker Build & Push
    image: docker:24.0.7-cli
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    commands:
      - echo "$DOCKER_TOKEN" | docker login -u "$DOCKER_USER" --password-stdin
      - docker build -t $DOCKER_USER/$CI_REPO_NAME:latest .
      - docker push $DOCKER_USER/$CI_REPO_NAME:latest
      - docker rmi ${DOCKER_USER}/${CI_REPO_NAME}:latest || true
    environment:
      DOCKER_USER:
        from_secret: DOCKER_USER
      DOCKER_TOKEN:
        from_secret: DOCKER_TOKEN
    when:
      branch:
        - main
      event:
        - push

  deploy-with-helm:
    name: Deploy with Helm
    image: alpine/helm:3.8.0
    environment:
      KUBECONFIG_CONTENT:
        from_secret: KUBE_CONFIG
    commands:
      - mkdir -p /root/.kube
      - echo "$KUBECONFIG_CONTENT" > /root/.kube/config
      - helm upgrade --install ${CI_REPO_NAME} ./charts
    when:
      branch:
        - main
      event:
        - push

  notify-discord:
    name: Notify Discord
    image: appleboy/drone-discord
    settings:
      webhook_id:
        from_secret: DISCORD_WEBHOOK_ID
      webhook_token:
        from_secret: DISCORD_WEBHOOK_TOKEN
      message: |
        {{#success build.status}}
        ✅ **Build #{{build.number}} SUCCEEDED**
        {{else}}
        ❌ **Build #{{build.number}} FAILED**
        {{/success}}

        📦 Repo: {{repo.name}}
        🌿 Branch: {{default build.branch "unknown"}}
        🔖 Commit: {{default (truncate build.commit 7) "none"}}
        👤 Author: {{default build.author "unknown"}}
        🔗 {{build.link}}
    when:
      status: [success, failure]
