steps:
  - name: Install & Test
    image: node:20
    commands:
      - npm ci
      - npm run test -- --coverage
    when:
      branch:
        - main
      event:
        - push

  - name: Upload Coverage to Codecov
  image: node:20
  environment:
    CODECOV_TOKEN:
      from_secret: CODECOV_TOKEN
  commands:
    - npm install -g codecov
    - codecov --token $CODECOV_TOKEN --file coverage/lcov.info --fail-under 60
  when:
    branch:
      - main
    event:
      - push

  - name: Docker Build & Push
    image: docker:24.0.7-cli
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    commands:
      - echo "$DOCKER_TOKEN" | docker login -u "$DOCKER_USER" --password-stdin
      - docker build -t $DOCKER_USER/$CI_REPO_NAME:latest .
      - docker push $DOCKER_USER/$CI_REPO_NAME:latest
      - docker rmi ${DOCKER_USER}/${CI_REPO_NAME}:latest || true
    environment:
      DOCKER_USER:
        from_secret: DOCKER_USER
      DOCKER_TOKEN:
        from_secret: DOCKER_TOKEN
    when:
      branch:
        - main
      event:
        - push

  - name: Deploy via SSH
    image: alpine:latest
    environment:
      DEPLOY_PORT:
        from_secret: DEPLOY_PORT
      SSH_PRIVATE_KEY:
        from_secret: SSH_PRIVATE_KEY
    commands:
      - apk add --no-cache openssh
      - echo "$SSH_PRIVATE_KEY" > /tmp/id_ed25519
      - chmod 600 /tmp/id_ed25519
      - ssh -i /tmp/id_ed25519 -o StrictHostKeyChecking=no root@192.168.1.120 "bash /opt/deploy/deploy.sh $CI_REPO_NAME $DEPLOY_PORT /opt/deploy/apps-configs/$CI_REPO_NAME/.env"
    when:
      branch:
        - main
      event:
        - push
